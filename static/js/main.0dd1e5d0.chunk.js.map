{"version":3,"sources":["components/Header.js","components/AboutMe.js","components/GithubRepos.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","createElement","className","AboutMe","GitHubRepos","repos","setRepos","useState","loading","setLoading","error","setError","useEffect","async","response","fetch","data","json","ok","sortedRepos","sort","a","b","Date","updated_at","err","fetchRepos","map","repo","key","id","name","description","href","html_url","target","rel","Contact","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JAaeA,MAXf,WACE,OACEC,IAAAC,cAAA,UAAQC,UAAU,8BAChBF,IAAAC,cAAA,MAAIC,UAAU,kCAAiC,4BAC/CF,IAAAC,cAAA,KAAGC,UAAU,eAAc,6HCOlBC,MAXf,WACE,OACEH,IAAAC,cAAA,WAASC,UAAU,OACjBF,IAAAC,cAAA,MAAIC,UAAU,2BAA0B,YACxCF,IAAAC,cAAA,KAAGC,UAAU,WAAU,6HCmDdE,MAvDf,WACE,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAASC,GAAcF,oBAAS,IAChCG,EAAOC,GAAYJ,mBAAS,MA0BnC,OAxBAK,oBAAU,KAEWC,WACjB,IACE,MAAMC,QAAiBC,MAAM,qDACvBC,QAAaF,EAASG,OAE5B,GAAIH,EAASI,GAAI,CAEf,MAAMC,EAAcH,EAAKI,KAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEE,YAAc,IAAID,KAAKF,EAAEG,aAC5ElB,EAASa,QAETR,EAAS,yBAEX,MAAOc,GACPd,EAAS,0CACV,QACCF,GAAW,KAIfiB,IACC,IAEClB,EACKR,IAAAC,cAAA,SAAG,2BAGRS,EACKV,IAAAC,cAAA,SAAIS,GAIXV,IAAAC,cAAA,WAASC,UAAU,OACjBF,IAAAC,cAAA,MAAIC,UAAU,2BAA0B,0BACxCF,IAAAC,cAAA,OAAKC,UAAU,wDACZG,EAAMsB,IAAKC,GACV5B,IAAAC,cAAA,OAAK4B,IAAKD,EAAKE,GAAI5B,UAAU,qCAC3BF,IAAAC,cAAA,MAAIC,UAAU,yBAAyB0B,EAAKG,MAC5C/B,IAAAC,cAAA,SAAI2B,EAAKI,aAAe,2BACxBhC,IAAAC,cAAA,KAAGgC,KAAML,EAAKM,SAAUC,OAAO,SAASC,IAAI,sBAAsBlC,UAAU,mCAAkC,uBCjC3GmC,MAZf,WACE,OACErC,IAAAC,cAAA,WAASC,UAAU,OACjBF,IAAAC,cAAA,MAAIC,UAAU,2BAA0B,WACxCF,IAAAC,cAAA,SAAG,mEACHD,IAAAC,cAAA,KAAGgC,KAAK,gCAAgC/B,UAAU,iBAAgB,mBCWzDoC,MAXf,WACE,OACEtC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACF,EAAM,MACPC,IAAAC,cAACE,EAAO,MACRH,IAAAC,cAACG,EAAW,MACZJ,IAAAC,cAACoC,EAAO,QCDCE,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxD,IAAAC,cAACD,IAAMyD,WAAU,KACfzD,IAAAC,cAACqC,EAAG,QAORC","file":"static/js/main.0dd1e5d0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"bg-blue-600 text-white p-6\">\r\n      <h1 className=\"text-4xl font-bold text-center\">Welcome to my Portfolio!</h1>\r\n      <p className=\"text-center\">\r\n        I am a web developer who loves to create applications and build user-friendly interfaces. Here are some of my projects!\r\n      </p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction AboutMe() {\r\n  return (\r\n    <section className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">About Me</h2>\r\n      <p className=\"text-lg\">\r\n        I am a web developer who loves to create applications and build user-friendly interfaces. Here are some of my projects!\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nfunction GitHubRepos() {\r\n  const [repos, setRepos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // GitHub API URL för att hämta publika repos\r\n    const fetchRepos = async () => {\r\n      try {\r\n        const response = await fetch('https://api.github.com/users/oscarbackman92/repos');\r\n        const data = await response.json();\r\n        \r\n        if (response.ok) {\r\n          // Sortera reposen baserat på 'updated_at' för att visa de nyaste högst upp\r\n          const sortedRepos = data.sort((a, b) => new Date(b.updated_at) - new Date(a.updated_at));\r\n          setRepos(sortedRepos);\r\n        } else {\r\n          setError('Failed to fetch repos');\r\n        }\r\n      } catch (err) {\r\n        setError('An error occurred while fetching repos');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRepos();\r\n  }, []); // Tom array betyder att useEffect körs bara en gång när komponenten laddas\r\n\r\n  if (loading) {\r\n    return <p>Loading repositories...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">My GitHub Repositories</h2>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\r\n        {repos.map((repo) => (\r\n          <div key={repo.id} className=\"bg-white shadow-md rounded-lg p-4\">\r\n            <h3 className=\"text-xl font-semibold\">{repo.name}</h3>\r\n            <p>{repo.description || 'No description provided'}</p>\r\n            <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 mt-2 inline-block\">\r\n              View on GitHub\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default GitHubRepos;\r\n","import React from 'react';\r\n\r\nfunction Contact() {\r\n  return (\r\n    <section className=\"p-6\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Contact</h2>\r\n      <p>If you're interested in collaborating, feel free to contact me!</p>\r\n      <a href=\"mailto:your.email@example.com\" className=\"text-blue-500\">\r\n        Send an email\r\n      </a>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport AboutMe from './components/AboutMe';\nimport GitHubRepos from './components/GithubRepos';\nimport Contact from './components/Contact';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <AboutMe />\n      <GitHubRepos />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}